		SEABORN
PRZYKŁADY WYKRESÓW:

WYKRES LINIOWY - SERIA 



s = pd.Series(np.random.randn(1000),
              index=pd.date_range('01/01/2015', periods=1000))
s = s.cumsum()
g = sns.relplot(kind='line', data=s)
g.fig.set_size_inches(6, 6)
g.fig.autofmt_xdate()
g.set_xlabels("Daty")
g.set_ylabels("Wartości")
plt.show()



WYKRES LINIOWY - DATA FRAME



dane = {'Wartosci': np.random.randn(1000),
        'Daty': pd.date_range('01/01/2015', periods=1000)}
df = pd.DataFrame(dane)
df.Wartosci = df.Wartosci.cumsum()
g = sns.relplot(x='Daty', y='Wartosci', kind='line', data=df)
g.fig.set_size_inches(6, 6)
g.fig.autofmt_xdate()
plt.show()



WYKRES PUNKTOWY



data = {'a': np.arange(50),
        'c': np.random.randint(0, 50, 50),
        'd': np.random.randn(50)}
data['b'] = data['a'] + 10 * np.random.randn(50)
data['d'] = np.abs(data['d']) * 100
df = pd.DataFrame(data)
plot = sns.relplot(data=df, x="a", y="b", hue="c",
                   palette='bright', size="d", legend=False)
plot.fig.set_size_inches(6, 6)
plt.show()



WYKRES KOLUMNOWY



data = {'Kraj': ['Belgia', 'Indie', 'Brazylia', 'Polska'],
        'Stolica': ['Bruksela', 'New Delhi', 'Brasilia', 'Warszawa'],
        'Kontynent': ['Europa', 'Azja', 'Ameryka Południowa', 'Europa'],
        'Populacja': [11190846, 1303171035, 207847528, 38675467]}
df = pd.DataFrame(data)
print(df.groupby('Kontynent').agg({'Populacja': 'sum'}))
plot = sns.catplot(data=df, x='Kontynent', y='Populacja', kind='bar',
                   ci=None, hue='Kontynent', dodge=False)
plot.fig.set_size_inches(7, 6)
plot.set(title='Wykres słupkowy', ylim=(0, 1400000000))
plt.legend(loc='upper right', title='Populacja na kontynencie')
plt.show()



WYKRES HISTOGRAMOWY



a = np.random.randn(10000)
histogram = sns.histplot(data=a, bins=50, color='g', alpha=0.75,
                        kde=True, stat='probability',
                        line_kws={'linewidth': 3})
histogram.set(title='Histogram', xlabel='x', ylabel='Prawdopodobieństwo')
plt.show()





